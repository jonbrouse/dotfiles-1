""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""" MAPPINGS """""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Tweak existing keys for more natural operation {{{
noremap <silent> <expr> j (v:count == 0 ? 'gj' : 'j')
noremap <silent> <expr> k (v:count == 0 ? 'gk' : 'k')
nnoremap Y y$
vnoremap < <gv
vnoremap > >gv
vnoremap . :normal .<CR>
" }}}

" Delete and put with black hole register {{{
xnoremap <Leader>p "_dP
nnoremap <Leader>d "_d
vnoremap <Leader>d "_d
set pastetoggle=<Leader>z
" }}}
"{{{
" Plugin mappings {{{
nnoremap <Leader>gy :Goyo<CR>
nnoremap <Leader>ll :Limelight!!<CR>
nnoremap <Leader>u :GundoToggle<CR>
nnoremap <S-Left> :SidewaysLeft<cr>
nnoremap <S-Right> :SidewaysRight<cr>
vmap <Enter> <Plug>(EasyAlign)
nnoremap <Leader>n :call ToggleNumber()<CR>
" }}}

" Move blocks up and down {{{
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]
nnoremap <C-Up> ddkP
nnoremap <C-Down> ddp
" }}}

" Create blank lines {{{
nnoremap <silent> <Leader>o o<Esc>
nnoremap <silent> <Leader>O O<Esc>
" }}}

" Highlight recent visual selections {{{
nnoremap <Leader>V `[v`]
" }}}

" Fold selection {{{
nnoremap <Leader><space> za
vnoremap <Leader><Space> zf
" }}}

" Choose a color scheme with fzf {{{
nnoremap <silent> <Leader>C :call fzf#run({
\   'source':
\     map(split(globpath(&rtp, "colors/*.vim"), "\n"),
\         "substitute(fnamemodify(v:val, ':t'), '\\..\\{-}$', '', '')"),
\   'sink':     'colo',
\   'options':  '+m',
\   'left':     20,
\   'launcher': 'xterm -geometry 20x30 -e bash -ic %s'
\ })<CR>
" }}}

" Use <Leader><Enter> to list buffer with fuzzy searching {{{
nnoremap <silent> <Leader><Enter> :call fzf#run({
\   'source':  reverse(Buflist()),
\   'sink':    function('Bufopen'),
\   'options': '+m',
\   'down':    len(Buflist()) + 2
\ })<CR>
" }}}

" Tags with FZF {{{
nnoremap <silent> <Leader>t :BTags<CR>
" }}}

" Splits {{{
nnoremap <Leader>\| :vsp<CR>
nnoremap <Leader>- :sp<CR>
nnoremap <Leader>j <C-W><C-J>
nnoremap <Leader>k <C-W><C-K>
nnoremap <Leader>l <C-W><C-L>
nnoremap <Leader>h <C-W><C-H>
nnoremap <Leader>J :resize +5<CR>
nnoremap <Leader>K :resize -5<CR>
nnoremap <Leader>H :vertical resize -5<CR>
nnoremap <Leader>L :vertical resize +5<CR>
" }}}

" File actions {{{
cnoremap %% <C-R>=expand('%:h').'/'<CR>
nnoremap <Leader>ff :FZF<CR>            " file search & open
nnoremap <Leader>fw :w<CR>              " file save
nnoremap <Leader>fs :w<CR>              " file save
nnoremap <Leader>fq :q<CR>              " file quit
" }}}

" Diff conflict actions {{{
nnoremap <Leader>cn ]cn                 " next conflict
nnoremap <Leader>cN [c                  " prev conflict
nnoremap <Leader>cc :diffupdate<CR>     " update diffs
nnoremap <Leader>ch :diffget //2<CR>    " keep local contents (left)
nnoremap <Leader>cl :diffget //3<CR>    " use merge contents (right)
" }}}

" Linting actions {{{
nnoremap <Leader>ln :lnext<CR>          " Next linting error
nnoremap <Leader>lN :lprev<CR>          " Previous linting error
" }}}

" command mode helpers {{{
cmap w!! w !sudo tee % >/dev/null
cmap cd. lcd %:p:h
" }}}

" clear search results {{{
nmap <silent> <Leader>/ :nohlsearch<CR>
" }}}

" vim: set ft=vim sw=4 ts=4 sts=4 et tw=78 nospell foldmethod=marker:foldlevel=0
